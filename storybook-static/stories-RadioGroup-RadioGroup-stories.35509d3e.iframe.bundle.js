"use strict";(self.webpackChunkgevima_ui=self.webpackChunkgevima_ui||[]).push([[398],{"./src/stories/RadioGroup/RadioGroup.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>RadioGroup_stories});var clsx=__webpack_require__("./node_modules/.pnpm/clsx@2.0.0/node_modules/clsx/dist/clsx.mjs"),react=__webpack_require__("./node_modules/.pnpm/next@14.0.4_@babel+core@7.23.6_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/compiled/react/index.js"),index_esm=__webpack_require__("./node_modules/.pnpm/react-icons@4.12.0_react@18.2.0/node_modules/react-icons/go/index.esm.js"),__jsx=react.createElement,RadioGroup=function RadioGroup(_ref){var options=_ref.options,onChange=_ref.onChange,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"primary":_ref$variant,_useState=(0,react.useState)(""),selectedValue=_useState[0],setSelectedValue=_useState[1];return __jsx("div",{className:"flex gap-8"},options.map((function(option){return __jsx("div",{key:option.value,className:"flex items-center gap-2 cursor-pointer text-white",onClick:function onClick(){return function handleRadioChange(value){setSelectedValue(value),onChange(value)}(option.value)}},__jsx("div",{className:(0,clsx.Z)("w-5 h-5 rounded-full border border-gray-300 flex items-center ",selectedValue===option.value&&"primary"===variant&&"bg-blue-500 border-blue-500",selectedValue===option.value&&"secondary"===variant&&"bg-[#F20089] border-[#F20089]")},selectedValue===option.value&&__jsx(index_esm.Zh5,{size:15,className:"ml-[1.2px] mt-[-1px]"})),__jsx("label",{className:(0,clsx.Z)("text-xs font-bold",selectedValue===option.value?"text-black":"text-[#747A80]")},option.label))})))};RadioGroup.displayName="RadioGroup";const RadioGroup_RadioGroup=RadioGroup;try{RadioGroup.displayName="RadioGroup",RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"RadioOption[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void"}},variant:{defaultValue:{value:"primary"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/RadioGroup/RadioGroup.tsx#RadioGroup"]={docgenInfo:RadioGroup.__docgenInfo,name:"RadioGroup",path:"src/stories/RadioGroup/RadioGroup.tsx#RadioGroup"})}catch(__react_docgen_typescript_loader_error){}const RadioGroup_stories={title:"GevimaUI/RadioGroup",component:RadioGroup_RadioGroup,parameters:{layout:"centered",docs:{source:{type:"code",code:"\n<RadioGroup\n  label=\"RadioGroup\"\n  options={[\n    { label: 'Option 1', value: 'option1' },\n    { label: 'Option 2', value: 'option2' },\n    { label: 'Option 3', value: 'option3' },\n  ]}\n/>\n        "}}},tags:["autodocs"],argTypes:{}};var Default={args:{label:"RadioGroup",options:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2"},{label:"Option 3",value:"option3"}]}},Secondary={args:{label:"RadioGroup",options:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2"},{label:"Option 3",value:"option3"}],variant:"secondary"},parameters:{docs:{source:{code:"\n<RadioGroup\n  label=\"RadioGroup\"\n  options={[\n    { label: 'Option 1', value: 'option1' },\n    { label: 'Option 2', value: 'option2' },\n    { label: 'Option 3', value: 'option3' },\n  ]}\n  variant=\"secondary\"\n/>\n        "}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RadioGroup',\n    options: [{\n      label: 'Option 1',\n      value: 'option1'\n    }, {\n      label: 'Option 2',\n      value: 'option2'\n    }, {\n      label: 'Option 3',\n      value: 'option3'\n    }]\n  }\n}",...Default.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RadioGroup',\n    options: [{\n      label: 'Option 1',\n      value: 'option1'\n    }, {\n      label: 'Option 2',\n      value: 'option2'\n    }, {\n      label: 'Option 3',\n      value: 'option3'\n    }],\n    variant: 'secondary'\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<RadioGroup\n  label=\"RadioGroup\"\n  options={[\n    { label: 'Option 1', value: 'option1' },\n    { label: 'Option 2', value: 'option2' },\n    { label: 'Option 3', value: 'option3' },\n  ]}\n  variant=\"secondary\"\n/>\n        `\n      }\n    }\n  }\n}",...Secondary.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Secondary"]}}]);